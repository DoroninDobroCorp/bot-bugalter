from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from data.models import *
import random
import string

# –°–æ–∑–¥–∞–µ–º engine –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö SQLite
engine = create_engine('sqlite:///test_db.db', echo=True)

# –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
Session = sessionmaker(bind=engine)
session = Session()

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
Model.metadata.create_all(engine)

try:
    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω—É
    country = Country(name='USA', flag='üá∫üá∏')
    session.add(country)
    session.commit()

    # –°–æ–∑–¥–∞–µ–º –±—É–∫–º–µ–∫–µ—Ä–∞
    bookmaker = Bookmaker(name='Bookmaker1', country=country,
                          salary_percentage=10, bk_name='BetWay')
    session.add(bookmaker)
    session.commit()

    # –°–æ–∑–¥–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫
    source = Source(name='MySource')
    session.add(source)
    session.commit()

    # –°–æ–∑–¥–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    employees = []
    for i in range(20):
        employee = Employee(name=f'Employee{i}', username=f'employee{i}')
        session.add(employee)
        employees.append(employee)
    session.commit()

    # –°–æ–∑–¥–∞–µ–º –º–∞—Ç—á–∏
    matches = []
    for i in range(10):
        match_id = ''.join(random.choices(string.ascii_letters + string.digits, k=8))
        match = Match(id=match_id, name=f'Match{i}')
        session.add(match)
        matches.append(match)
    session.commit()

    # –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç—ã
    for match in matches:
        for i in range(10):
            employees_in_report = random.sample(employees, random.randint(1, 5))
            report = Report(date=datetime.date(2021, 1, 1),
                            source=source, country=country,
                            bookmaker=bookmaker, match=match,
                            nickname='emploee1', bet_amount=100,
                            return_amount=200, employees=employees_in_report)
            session.add(report)

    session.commit()

    # –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω
    token = Token(access_token='token')
    session.add(token)
    session.commit()

    print("–¢–µ—Å—Ç–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
except Exception as e:
    session.rollback()
    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
finally:
    session.close()